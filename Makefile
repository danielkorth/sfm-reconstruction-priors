help:  ## Show help
	@grep -E '^[.a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Clean autogenerated files
	rm -rf dist
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	rm -f .coverage

clean-logs: ## Clean logs
	rm -rf logs/**

clean-outputs: ## Clean all files in outputs directory
	rm -rf outputs/**

format: ## Run pre-commit hooks
	pre-commit run -a

sync: ## Merge changes from main branch to your current branch
	git pull
	git pull origin main

start_rerun: ## Start Rerun Server
	rerun --serve

# Default value for LOGDIR
LOGDIR ?= outputs
start_tensorboard: ## Start Tensorboard with optional logdir (default: outputs)
	conda run --no-capture-output -n tb tensorboard --logdir $(LOGDIR)

clean_pointmaps: ## Remove pointmaps from runs and multiruns
	find multirun -type d -name "pointmaps" -exec rm -rf {} +
	find outputs -type d -name "pointmaps" -exec rm -rf {} +

clean_precomputed: ## Remove precomputed files
	find -L data -type d \( -name "pointmaps" -o -name "keypoints" -o -name "matches" \) -exec rm -rf {} \;

# Variables
SESSION_NAME = rerun
SERVER_COMMAND = rerun --serve --server-memory-limit 16GB

# Restart the server in the existing tmux session
restart_rerun: ## Restart the rerun server in tmux session
	@if ! tmux has-session -t $(SESSION_NAME) 2>/dev/null; then \
		echo "Session $(SESSION_NAME) does not exist. Creating it..."; \
		tmux new-session -d -s $(SESSION_NAME) "$(SERVER_COMMAND)"; \
		echo "Created new session and started server"; \
	else \
		echo "Restarting server in session: $(SESSION_NAME)"; \
		tmux send-keys -t $(SESSION_NAME) C-c; \
		sleep 1; \
		tmux send-keys -t $(SESSION_NAME) "$(SERVER_COMMAND)" C-m; \
		echo "Server restarted"; \
	fi
